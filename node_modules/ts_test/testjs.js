class test {
    constructor() {
        this.name = 'test test test'
    }
    echo() {
        console.log(this.name)
    }
}

function a() {
    let a = new test()
    a.echo()
}
export function tob() {
    console.log('33333')
}
// a()
export default a


//================
//ts引入js

//// 1
//要引入的ts 直接 import '**.js'
//这样直接引入整个js文件的内容    没有模块概念   无法引用js文件内的内容

////  2
//import a from '***.js'    导出默认模块
//相对路径./     成功
//非相对路径 node_modules 中导出默认成功 但webpack-dev-server报错热更新卡死

//import { b } from '***.js'    导出其他模块
//相对路径./        可编译但webpack-dev-server报错热更新卡死
//非相对路径        可编译但webpack-dev-server报错热更新卡死







//一般ts导入js 要有声明文件

// 全局声明 
// 1.要在 .d.ts 文件中声明   PS：下面路径不能为相对路径 './' '/',这里放在node_modules中才引用成功
// declare module 'ts_test' {
//     export 。。。
// }
// 2.要在ts文件<reference path="./sfc.d.ts" />